apply plugin: "kotlin-multiplatform"
apply plugin: "com.github.salomonbrys.gradle.kotlin.js.mpp-tests.node"
apply plugin: "com.github.salomonbrys.gradle.kotlin.js.mpp-assemble-web"

kotlin {
    targets {
        fromPreset(presets.jvm, "jvm") {
            compilations.all {
                def task = tasks[compileKotlinTaskName]
                task.sourceCompatibility = JavaVersion.VERSION_1_8
                task.targetCompatibility = JavaVersion.VERSION_1_8
                task.kotlinOptions {
                    jvmTarget = '1.8'
                }
            }
        }
        fromPreset(presets.js, "js") {
            compilations.all {
                tasks[compileKotlinTaskName].kotlinOptions {
                    languageVersion = "1.3"
                    moduleKind = "umd"
                    sourceMap = true
                    metaInfo = true
                }
            }
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
            }
        }
        commonTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-common"
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
            }
        }
        jvmMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
            }
        }
        jvmTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test"
                implementation "org.jetbrains.kotlin:kotlin-test-junit"
            }
        }
        jsMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js"
            }
        }
        jsTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-js"
            }
        }
    }
}

kotlinJsNodeTests {
    targets {
        create("js") {
            engine = mocha
        }
    }
}

assembleWeb {
    targets {
        create("js") {
            outputDir = "$buildDir/web/kotlin-js"
        }
    }
}

//apply plugin: "com.moowork.node"
//
//afterEvaluate {
//    task populateNodeModules(type: Copy, dependsOn: jsTestClasses) {
//        from compileTestKotlinJs.kotlinOptions.outputFile
//        from compileKotlinJs.kotlinOptions.outputFile
//
//        configurations.jsTestCompileClasspath.each {
//            from zipTree(it.absolutePath).matching {
//                include '*.js'
//                include '*.map'
//            }
//        }
//
//        into "${buildDir}/node_modules"
//    }
//
//    task mochaInstall(type: NpmTask) {
//        args = ['install', 'mocha', 'mochawesome', 'mocha-simple-html-reporter', 'mocha-multi-reporters', 'mocha-junit-reporter', 'source-map-support']
//        outputs.upToDateWhen { new File("$projectDir/node_modules").exists() }
//    }
//
//    task mochaTest(type: NodeTask, dependsOn: [mochaInstall, populateNodeModules]) {
//        def mochaMultiReportersConfigJsonFile = new File("$buildDir/mocha-multi-reporters-config.json")
//        doFirst {
//            // https://www.npmjs.com/package/mocha-multi-reporters
//            new File("$buildDir/test-results/jsTest").mkdirs()
//            mochaMultiReportersConfigJsonFile.write("""{
//                "reporterEnabled": "dot,mocha-junit-reporter,mochawesome",
//                "mochawesomeReporterOptions": {
//                    "reportFilename": "index",
//                    "quiet": true
//                },
//                "mochaJunitReporterReporterOptions": {
//                    "testsuitesTitle": true,
//                    "toConsole": false,
//                    "suiteTitleSeparatedBy": ".",
//                    "mochaFile": "$buildDir/test-results/jsTest/TEST-test.xml"
//                }
//            }""")
//        }
//        script = rootProject.file("$buildDir/../node_modules/mocha/bin/mocha")
//
//        //new File(compileTestKotlinJs.kotlinOptions.outputFile).write("require('source-map-support').install();\n" + new File(compileTestKotlinJs.kotlinOptions.outputFile).readLines().join("\n"))
//        //println(compileTestKotlinJs.kotlinOptions.outputFile)
//
//        args = [compileTestKotlinJs.kotlinOptions.outputFile, "-r", "source-map-support/register", "--reporter", "mocha-multi-reporters", "--reporter-options", "configFile=$mochaMultiReportersConfigJsonFile"]
//
//        //println("mocha " + args.join(" "))
//        execOverrides {
//            it.workingDir = buildDir
//        }
//
//        doLast {
//            copy {
//                from "$buildDir/mochawesome-report"
//                into "$buildDir/reports/tests/jsTest"
//            }
//            println("Report saved to $buildDir/reports/tests/jsTest/index.html")
//        }
//    }
//
//    jsTest.finalizedBy(mochaTest)
//}